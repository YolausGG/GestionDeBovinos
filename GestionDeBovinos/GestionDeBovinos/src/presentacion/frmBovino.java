/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package presentacion;

import clases.BotonesTabla;
import clases.Bovino;
import clases.Hembra;
import clases.Macho;
import clases.Pedigree;
import clases.Raza;
import dominio.dControladora;
import java.awt.Image;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import persistencia.pRaza;

/**
 *
 * @author nico_
 */
public class frmBovino extends javax.swing.JInternalFrame {

    JButton modificar = new JButton("Modificar"); // Creamos los botones para la tabla
    JButton eliminar = new JButton("Eliminar");
    public static String caravana = "";
    public static String sexo = "";

    public static frmBovino frmBovino1 = null;

    public static int columna, row; // Metodo para cuando hacemos click en los botones

    public void insertarIconos(JButton btn, String ruta) { // Insertar Iconos en Botones Tabla

        btn.setIcon(new javax.swing.ImageIcon(getClass().getResource(ruta)));

    }

    /**
     * Creates new form frmBovino1
     */
    public frmBovino() {
        initComponents();

        this.setSize(frmInicio.jDkPEscritorio.getWidth(), frmInicio.jDkPEscritorio.getHeight());

        this.setTitle("BOVINOS");
        llenarComboRaza();
        grupoBotones.add(chkHembra);
        grupoBotones.add(chkMacho);
        lblTipo.setVisible(false);
        cboTipo.setVisible(false);
        lblRCaravana.setVisible(false);
        lblRFechaNacimiento.setVisible(false);
        lblRRaza.setVisible(false);
        lblRTipoMacho.setVisible(false);
        lblRNumeroPedigree.setVisible(false);
        lblNumeroPedigree.setVisible(false);
        txtNumeroPedigree.setVisible(false);
        llenarComboPadre();
        llenarComboMadre();
        // dControladora.cargarBovinos();
        actualizarTabla();
        modificar.setName("btnModificar");
        eliminar.setName("btnEliminar");
        modificar.setBorder(null);
        eliminar.setBorder(null);
        insertarIconos(modificar, "/Imagenes/Modificar16px.png");
        insertarIconos(eliminar, "/Imagenes/Eliminar16px.png");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupoBotones = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        lblFotoBovino = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btnBuscarFoto = new javax.swing.JButton();
        txtRutaFoto = new javax.swing.JTextField();
        lblRTipoMacho = new java.awt.Label();
        jLabel3 = new javax.swing.JLabel();
        txtCaravana = new javax.swing.JTextField();
        chkPedigree = new javax.swing.JCheckBox();
        lblRCaravana = new java.awt.Label();
        lblRNumeroPedigree = new java.awt.Label();
        lblRRaza = new java.awt.Label();
        lblRFechaNacimiento = new java.awt.Label();
        btnAgregar = new javax.swing.JButton();
        cboRaza = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cboTipo = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        cboMadre = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        cboPadre = new javax.swing.JComboBox<>();
        chkMacho = new javax.swing.JCheckBox();
        chkHembra = new javax.swing.JCheckBox();
        jDateFechaNacimiento = new com.toedter.calendar.JDateChooser();
        lblTipo = new javax.swing.JLabel();
        txtNumeroPedigree = new javax.swing.JTextField();
        lblNumeroPedigree = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableBovinos = new javax.swing.JTable();

        setBackground(new java.awt.Color(54, 67, 114));
        setBorder(null);
        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setName(""); // NOI18N

        jPanel2.setBackground(new java.awt.Color(54, 67, 114));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel2.add(lblFotoBovino, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 120, 212, 110));

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Fecha Nacimiento:");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, 130, -1));

        btnBuscarFoto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/buscar16px.png"))); // NOI18N
        btnBuscarFoto.setText("Buscar Foto");
        btnBuscarFoto.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBuscarFoto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnBuscarFotoMouseClicked(evt);
            }
        });
        jPanel2.add(btnBuscarFoto, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 160, 230, 30));

        txtRutaFoto.setEditable(false);
        jPanel2.add(txtRutaFoto, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 120, 230, 30));

        lblRTipoMacho.setForeground(new java.awt.Color(255, 255, 255));
        lblRTipoMacho.setText("Requerido");
        jPanel2.add(lblRTipoMacho, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 300, 134, 30));

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Caravana:");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, 179, -1));
        jPanel2.add(txtCaravana, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 50, 166, 30));

        chkPedigree.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        chkPedigree.setForeground(new java.awt.Color(255, 255, 255));
        chkPedigree.setText("Pedigree");
        chkPedigree.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        chkPedigree.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkPedigreeActionPerformed(evt);
            }
        });
        jPanel2.add(chkPedigree, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 230, 194, 30));

        lblRCaravana.setForeground(new java.awt.Color(255, 255, 255));
        lblRCaravana.setText("Requerido");
        jPanel2.add(lblRCaravana, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 50, 140, 30));

        lblRNumeroPedigree.setForeground(new java.awt.Color(255, 255, 255));
        lblRNumeroPedigree.setText("Requerido");
        jPanel2.add(lblRNumeroPedigree, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 300, 194, 30));

        lblRRaza.setForeground(new java.awt.Color(255, 255, 255));
        lblRRaza.setText("Requerido");
        jPanel2.add(lblRRaza, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 230, 134, 30));

        lblRFechaNacimiento.setForeground(new java.awt.Color(255, 255, 255));
        lblRFechaNacimiento.setText("Requerido");
        jPanel2.add(lblRFechaNacimiento, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 110, 140, 30));

        btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Ingresar 16px.png"))); // NOI18N
        btnAgregar.setText("Agregar");
        btnAgregar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAgregar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAgregarMouseClicked(evt);
            }
        });
        jPanel2.add(btnAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 340, 166, 30));

        cboRaza.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar" }));
        cboRaza.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel2.add(cboRaza, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 230, 166, 30));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Raza:");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 200, 64, 21));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Madre:");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 20, -1, -1));

        cboTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar", "En Pie", "Congelado" }));
        cboTipo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel2.add(cboTipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 300, 166, 30));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Padre:");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 20, -1, -1));

        cboMadre.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar" }));
        cboMadre.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel2.add(cboMadre, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 50, 212, 30));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Ruta Foto:");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 90, -1, -1));

        cboPadre.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar" }));
        cboPadre.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel2.add(cboPadre, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 50, 228, 30));

        grupoBotones.add(chkMacho);
        chkMacho.setForeground(new java.awt.Color(255, 255, 255));
        chkMacho.setText("Macho");
        chkMacho.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        chkMacho.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chkMachoMouseClicked(evt);
            }
        });
        jPanel2.add(chkMacho, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 160, -1, 21));

        grupoBotones.add(chkHembra);
        chkHembra.setForeground(new java.awt.Color(255, 255, 255));
        chkHembra.setText("Hembra");
        chkHembra.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        chkHembra.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chkHembraMouseClicked(evt);
            }
        });
        jPanel2.add(chkHembra, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 160, -1, 21));
        jPanel2.add(jDateFechaNacimiento, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 110, 160, 28));

        lblTipo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblTipo.setForeground(new java.awt.Color(255, 255, 255));
        lblTipo.setText("Tipo:");
        jPanel2.add(lblTipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 270, 48, -1));
        jPanel2.add(txtNumeroPedigree, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 300, 195, 30));

        lblNumeroPedigree.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblNumeroPedigree.setForeground(new java.awt.Color(255, 255, 255));
        lblNumeroPedigree.setText("Número de Pedigree por ARU:");
        jPanel2.add(lblNumeroPedigree, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 270, 318, -1));

        jPanel1.setBackground(new java.awt.Color(54, 67, 114));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jTableBovinos = new javax.swing.JTable(){
            public boolean isCellEditable(int row, int column){
                return false;
            }};
            jTableBovinos.setBackground(new java.awt.Color(204, 255, 255));
            jTableBovinos.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null}
                },
                new String [] {
                    "Title 1", "Title 2", "Title 3", "Title 4"
                }
            ));
            jTableBovinos.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
            jTableBovinos.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jTableBovinosMouseClicked(evt);
                }
            });
            jScrollPane1.setViewportView(jTableBovinos);

            javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
            jPanel1.setLayout(jPanel1Layout);
            jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            );
            jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 343, Short.MAX_VALUE)
            );

            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
            getContentPane().setLayout(layout);
            layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 884, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            );
            layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            );

            pack();
        }// </editor-fold>//GEN-END:initComponents

    public boolean validarCampos() {

        int contador = 0;
        if (txtCaravana.getText().equals("")) {
            lblRCaravana.setVisible(true);
            contador++;
        } else {
            lblRCaravana.setVisible(false);
        }
        if (jDateFechaNacimiento.getDate() == null) {
            lblRFechaNacimiento.setVisible(true);
            contador++;
        } else {
            lblRFechaNacimiento.setVisible(false);
        }
        if (cboRaza.getSelectedIndex() == 0) {
            lblRRaza.setVisible(true);
            contador++;
        } else {
            lblRRaza.setVisible(false);
        }
        if (cboTipo.getSelectedIndex() == 0 && chkMacho.isSelected()) {
            lblRTipoMacho.setVisible(true);
            contador++;
        } else {
            lblRTipoMacho.setVisible(false);
        }
        if (txtNumeroPedigree.getText().equals("") && chkPedigree.isSelected()) {
            lblRNumeroPedigree.setVisible(true);
            contador++;
        } else {
            lblRNumeroPedigree.setVisible(false);
        }

        return contador < 1;
    }

    public void limpiarCajas() {

        txtCaravana.setText(null);
        jDateFechaNacimiento.setDate(null);
        chkHembra.setSelected(false);
        chkMacho.setSelected(false);
        cboRaza.setSelectedIndex(0);
        cboTipo.setSelectedIndex(0);
        cboPadre.setSelectedIndex(0);
        cboMadre.setSelectedIndex(0);
        chkPedigree.setSelected(false);
        txtNumeroPedigree.setText(null);
        txtRutaFoto.setText(null);
        lblFotoBovino.setIcon(null);
    }

    private void llenarComboRaza() {

        ArrayList<Raza> listaRazas = pRaza.buscarRazas();

        for (Raza raza : listaRazas) {

            cboRaza.addItem(raza);
        }

    }

    private void llenarComboPadre() {

        ArrayList<Macho> listaMachos = dControladora.listarMachos();

        int total = cboPadre.getItemCount();

        if (cboPadre.getItemCount() > 1) {
            for (int i = 0; i < total - 1; i++) {
                cboPadre.removeItemAt(1);
            }

        }

        for (Macho macho : listaMachos) {

            cboPadre.addItem(macho);

        }

    }

    private void llenarComboMadre() {

        ArrayList<Hembra> listaHembras = dControladora.listarHembras();

        int total = cboMadre.getItemCount();

        if (cboMadre.getItemCount() > 1) {
            for (int i = 0; i < total - 1; i++) {
                cboMadre.removeItemAt(1);
            }

        }

        for (Hembra hembra : listaHembras) {
            cboMadre.addItem(hembra);
        }

    }

    public void actualizarTabla() {
        jTableBovinos.setDefaultRenderer(Object.class, new BotonesTabla());
        DefaultTableModel model = new DefaultTableModel();

        TableRowSorter<TableModel> elQueOrdena = new TableRowSorter<TableModel>(model);
        jTableBovinos.setRowSorter(elQueOrdena);

        ArrayList<Bovino> listaBovino = dControladora.listarBovinos();

        model.addColumn("Nº Caravana");
        model.addColumn("Fecha Nacimiento");
        model.addColumn("Raza");
        model.addColumn("Sexo");
        model.addColumn("Tipo");
        model.addColumn("Modificar ");
        model.addColumn("Eliminar ");

        for (Bovino b : listaBovino) {

            String tipo = b.getClass().getSimpleName().equals("Macho") ? "Macho" : "Hembra";

            if (tipo.equals("Macho")) {
                Macho macho = (Macho) b;
                model.addRow(new Object[]{b.getCaravanaBovino(), b.getFechaNacimiento(), b.getRaza().getTipo(), tipo, macho.getTipo(), modificar, eliminar});
            } else {
                model.addRow(new Object[]{b.getCaravanaBovino(), b.getFechaNacimiento(), b.getRaza().getTipo(), tipo, "", modificar, eliminar});
            }
        }

        jTableBovinos.setModel(model);
        jTableBovinos.setRowHeight(25);
    }

    private void jTableBovinosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableBovinosMouseClicked

        columna = jTableBovinos.getColumnModel().getColumnIndexAtX(evt.getX());
        row = evt.getY() / jTableBovinos.getRowHeight();
        if (columna <= jTableBovinos.getColumnCount() && columna >= 0 && row <= jTableBovinos.getRowCount() && row >= 0) {
            Object objeto = jTableBovinos.getValueAt(row, columna);

            if (evt.getClickCount() == 2) {

                int fila = jTableBovinos.getSelectedRow();

                if (fila != -1) {

                    caravana = jTableBovinos.getValueAt(fila, 0).toString();
                    sexo = jTableBovinos.getValueAt(fila, 3).toString();

                    frmFichaBovino fichaBovino = new frmFichaBovino();
                    frmInicio.jDkPEscritorio.add(fichaBovino);
                    fichaBovino.setVisible(true);
                }
            }

            if (objeto instanceof JButton) {
                ((JButton) objeto).doClick();
                JButton botones = (JButton) objeto;

                if (botones.getName().equals("btnModificar")) {

                    int fila = jTableBovinos.getSelectedRow();

                    if (fila != -1) {
                        limpiarCajas();

                        caravana = jTableBovinos.getValueAt(fila, 0).toString();
                        sexo = jTableBovinos.getValueAt(fila, 3).toString();
                        this.dispose();
                        frmModificarBovino modificarBovino = new frmModificarBovino();
                        frmInicio.jDkPEscritorio.add(modificarBovino);
                        modificarBovino.setVisible(true); // Abre el formulario de Modificar la Enfermedad

                    } else {
                        JOptionPane.showMessageDialog(null, "Error: No se selecciono el Bovino a modificar");
                    }
                } else {
                    if (botones.getName().equals("btnEliminar")) {

                        int fila = jTableBovinos.getSelectedRow();

                        String caravana = jTableBovinos.getValueAt(fila, 0).toString();

                        frmBovino.caravana = caravana;

                        frmBajaLogica formularioBajaLogica = new frmBajaLogica();
                        frmInicio.jDkPEscritorio.add(formularioBajaLogica);
                        formularioBajaLogica.setVisible(true);

                        frmBovino1 = this;

                        //this.dispose();
                        //actualizarTabla();
                        //La primera opcion seleccionada (SI) devuelve cero y la segunda (NO) devuelve uno
                        //int opcion = JOptionPane.showConfirmDialog(null, "Desea Eliminar el Bovino?", "Eliminar Bovino ", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                    }
                }
            }
        }
    }//GEN-LAST:event_jTableBovinosMouseClicked

    private void chkHembraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chkHembraMouseClicked

        lblTipo.setVisible(false);
        cboTipo.setVisible(false);
        lblRTipoMacho.setVisible(false);
    }//GEN-LAST:event_chkHembraMouseClicked

    private void chkMachoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chkMachoMouseClicked

        lblTipo.setVisible(true);
        cboTipo.setVisible(true);
    }//GEN-LAST:event_chkMachoMouseClicked

    private void btnAgregarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAgregarMouseClicked

        if (validarCampos()) {

            String caravana = txtCaravana.getText();
            Date fechaNacimiento = jDateFechaNacimiento.getDate();
            Raza raza = (Raza) cboRaza.getSelectedItem();

            String numeroPredigree = null;

            if (!txtNumeroPedigree.getText().equals("")) {
                numeroPredigree = txtNumeroPedigree.getText();
            }

            String rutaFoto = null;

            if (!txtRutaFoto.getText().isEmpty()) {
                rutaFoto = txtRutaFoto.getText();
            }

            Macho padre = null;
            Hembra madre = null;

            if (cboPadre.getSelectedIndex() > 0) {
                padre = (Macho) cboPadre.getSelectedItem();
            }
            if (cboMadre.getSelectedIndex() > 0) {

                madre = (Hembra) cboMadre.getSelectedItem();
            }

            try {

                if (chkMacho.isSelected()) {
                    String tipo = cboTipo.getSelectedItem().toString();

                    if (rutaFoto == null) {

                        Bovino bovino = new Bovino(caravana, fechaNacimiento, madre, padre, raza);

                        if (dControladora.altaBovino(bovino)) {

                            Bovino bovinoRecienIngresado = dControladora.buscarBovinoCaravana(caravana);
                            Macho macho = new Macho(bovinoRecienIngresado.getIdBovino(), caravana, fechaNacimiento, raza, tipo);

                            if (dControladora.altaMacho(macho)) {

                                if (chkPedigree.isSelected()) {

                                    Pedigree pedigree = new Pedigree(macho, numeroPredigree);
                                    if (dControladora.altaPedigree(pedigree)) {
                                        JOptionPane.showMessageDialog(null, "Macho Pedigree Ingresado Correctamente");
                                        actualizarTabla();
                                        llenarComboPadre();
                                        limpiarCajas(); // Limpiamos Caja de Texto
                                    }
                                } else {
                                    JOptionPane.showMessageDialog(null, "Macho Ingresado Correctamente");

                                    actualizarTabla();
                                    llenarComboPadre();
                                    limpiarCajas(); // Limpiamos Caja de Texto
                                }
                            } else {
                                JOptionPane.showMessageDialog(null, "Error: No se pudo agregar el Macho");
                            }
                        } else {
                            JOptionPane.showMessageDialog(null, "Error: No se pudo agregar el Bovino");
                        }
                    } else {

                        byte[] foto = getImagen(rutaFoto);
                        Bovino bovino = new Bovino(caravana, fechaNacimiento, madre, padre, raza, foto);

                        if (dControladora.altaBovinoFoto(bovino)) {

                            Bovino bovinoRecienIngresado = dControladora.buscarBovinoCaravana(caravana);
                            Macho macho = new Macho(bovinoRecienIngresado.getIdBovino(), caravana, fechaNacimiento, raza, tipo);

                            if (dControladora.altaMacho(macho)) {

                                if (chkPedigree.isSelected()) {

                                    Pedigree pedigree = new Pedigree(macho, numeroPredigree);
                                    if (dControladora.altaPedigree(pedigree)) {
                                        JOptionPane.showMessageDialog(null, "Macho Pedigree Ingresado Correctamente");
                                        actualizarTabla();
                                        llenarComboPadre();
                                        limpiarCajas(); // Limpiamos Caja de Texto
                                    }
                                } else {
                                    JOptionPane.showMessageDialog(null, "Macho Ingresado Correctamente");

                                    actualizarTabla();
                                    llenarComboPadre();
                                    limpiarCajas(); // Limpiamos Caja de Texto
                                }
                            } else {
                                JOptionPane.showMessageDialog(null, "Error: No se pudo agregar el Macho");
                            }
                        } else {
                            JOptionPane.showMessageDialog(null, "Error: No se pudo agregar el Bovino");
                        }
                    }
                } else if (chkHembra.isSelected()) {

                    if (rutaFoto == null) {
                        Bovino bovino = new Bovino(caravana, fechaNacimiento, madre, padre, raza);

                        if (dControladora.altaBovino(bovino)) {

                            Bovino bovinoRecienIngresado = dControladora.buscarBovinoCaravana(caravana);
                            Hembra hembra = new Hembra(bovinoRecienIngresado.getIdBovino(), caravana, fechaNacimiento, raza, madre, padre);

                            if (dControladora.altaHembra(hembra)) {

                                if (chkPedigree.isSelected()) {

                                    Pedigree pedigree = new Pedigree(hembra, numeroPredigree);
                                    if (dControladora.altaPedigree(pedigree)) {
                                        JOptionPane.showMessageDialog(null, "Hembra Pedigree Ingresada Correctamente");
                                        actualizarTabla();
                                        llenarComboMadre();
                                        limpiarCajas(); // Limpiamos Caja de Texto
                                    }
                                } else {
                                    JOptionPane.showMessageDialog(null, "Hembra Ingresada Correctamente");
                                    actualizarTabla();
                                    llenarComboMadre();
                                    limpiarCajas(); // Limpiamos Caja de Texto
                                }
                            } else {
                                JOptionPane.showMessageDialog(null, "Error: No se pudo agregar la Hembra");
                            }
                        } else {
                            JOptionPane.showMessageDialog(null, "Error: No se pudo agregar el Bovino");
                        }
                    } else {

                        byte[] foto = getImagen(rutaFoto);

                        Bovino bovino = new Bovino(caravana, fechaNacimiento, madre, padre, raza, foto);

                        if (dControladora.altaBovinoFoto(bovino)) {

                            Bovino bovinoRecienIngresado = dControladora.buscarBovinoCaravana(caravana);
                            Hembra hembra = new Hembra(bovinoRecienIngresado.getIdBovino(), caravana, fechaNacimiento, raza, madre, padre);

                            if (dControladora.altaHembra(hembra)) {

                                if (chkPedigree.isSelected()) {

                                    Pedigree pedigree = new Pedigree(hembra, numeroPredigree);
                                    if (dControladora.altaPedigree(pedigree)) {
                                        JOptionPane.showMessageDialog(null, "Hembra Pedigree Ingresada Correctamente");
                                        actualizarTabla();
                                        llenarComboMadre();
                                        limpiarCajas(); // Limpiamos Caja de Texto
                                    }
                                } else {
                                    JOptionPane.showMessageDialog(null, "Hembra Ingresada Correctamente");
                                    actualizarTabla();
                                    llenarComboMadre();
                                    limpiarCajas(); // Limpiamos Caja de Texto
                                }
                            } else {
                                JOptionPane.showMessageDialog(null, "Error: No se pudo agregar la Hembra");
                            }
                        } else {
                            JOptionPane.showMessageDialog(null, "Error: No se pudo agregar el Bovino");
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Seleccione el sexo del Bovino");
                }

            } catch (Exception e) {
                throw e;
            }
        } else {
            JOptionPane.showMessageDialog(null, "Ingrese los datos faltantes");
        }
    }//GEN-LAST:event_btnAgregarMouseClicked

    private void chkPedigreeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkPedigreeActionPerformed

        if (chkPedigree.isSelected()) {
            lblNumeroPedigree.setVisible(true);
            txtNumeroPedigree.setVisible(true);
        } else {
            lblNumeroPedigree.setVisible(false);
            txtNumeroPedigree.setVisible(false);
            lblRNumeroPedigree.setVisible(false);
        }
    }//GEN-LAST:event_chkPedigreeActionPerformed

    private void btnBuscarFotoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarFotoMouseClicked

        JFileChooser j = new JFileChooser();
        FileNameExtensionFilter fil = new FileNameExtensionFilter("JPG, PNG & GIF", "jpg", "png", "gif");
        j.setFileFilter(fil);

        int s = j.showOpenDialog(this);
        if (s == JFileChooser.APPROVE_OPTION) {
            String ruta = j.getSelectedFile().getAbsolutePath();
            txtRutaFoto.setText(ruta);

            Image foto = getToolkit().getImage(ruta);
            foto = foto.getScaledInstance(lblFotoBovino.getWidth(), lblFotoBovino.getHeight(), Image.SCALE_DEFAULT);

            lblFotoBovino.setIcon(new ImageIcon(foto));
        }
    }//GEN-LAST:event_btnBuscarFotoMouseClicked

    private byte[] getImagen(String pRuta){
        
        File imagen = new File(pRuta);
        try {
            byte[] icono = new byte[(int) imagen.length()];
            InputStream input = new FileInputStream(imagen);
            input.read(icono);
            return icono;
            
        } catch (Exception e) {
            return null;
        }
    }
            
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnBuscarFoto;
    private javax.swing.JComboBox<Object> cboMadre;
    private javax.swing.JComboBox<Object> cboPadre;
    private javax.swing.JComboBox<Object> cboRaza;
    private javax.swing.JComboBox<String> cboTipo;
    private javax.swing.JCheckBox chkHembra;
    private javax.swing.JCheckBox chkMacho;
    private javax.swing.JCheckBox chkPedigree;
    private javax.swing.ButtonGroup grupoBotones;
    private com.toedter.calendar.JDateChooser jDateFechaNacimiento;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableBovinos;
    private javax.swing.JLabel lblFotoBovino;
    private javax.swing.JLabel lblNumeroPedigree;
    private java.awt.Label lblRCaravana;
    private java.awt.Label lblRFechaNacimiento;
    private java.awt.Label lblRNumeroPedigree;
    private java.awt.Label lblRRaza;
    private java.awt.Label lblRTipoMacho;
    private javax.swing.JLabel lblTipo;
    private javax.swing.JTextField txtCaravana;
    private javax.swing.JTextField txtNumeroPedigree;
    private javax.swing.JTextField txtRutaFoto;
    // End of variables declaration//GEN-END:variables
}
